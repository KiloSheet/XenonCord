name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Auto Increment Semver Action
        uses: MCKanpolat/auto-semver-action@v1
        id: versioning
        with:
          releaseType: patch
          incrementPerCommit: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Next Release Number
        run: echo ${{ steps.versioning.outputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          release_name: Release ${{ steps.versioning.outputs.version }}
          body: |
            Automatically created release by GitHub Actions
          draft: false
          prerelease: false

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.versioning.outputs.version }}

  build:
    name: Build and Upload
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests --no-transfer-progress

      - name: List target directory
        run: ls -al bootstrap/target

      - name: Get jar file
        id: set_output_path
        run: |
          jar_file=$(ls bootstrap/target | grep XenonCord.jar || echo "No JAR file found")
          if [ "$jar_file" = "No JAR file found" ]; then
            exit 1
          fi
          echo "JAR_FILE_PATH=bootstrap/target/$jar_file" >> $GITHUB_ENV
          echo "JAR_FILE_NAME=$jar_file" >> $GITHUB_ENV

      - name: Upload jar file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ env.JAR_FILE_PATH }}
          asset_name: ${{ env.JAR_FILE_NAME }}
          asset_content_type: application/java-archive

permissions:
  contents: write
  packages: write
